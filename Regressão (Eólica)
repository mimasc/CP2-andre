import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier
from sklearn.ensemble import RandomForestClassifier
from sklearn.svm import SVC
from sklearn.metrics import accuracy_score, confusion_matrix, ConfusionMatrixDisplay


file_path = '/content/T1.csv'

try:
    df = pd.read_csv(file_path, encoding='latin-1')
except FileNotFoundError:
    print(f"\nERRO FATAL: Arquivo não encontrado em: {file_path}")
    exit()


df.columns = [
    'Date/Time', 'LV ActivePower (kW)', 'Wind Speed (m/s)',
    'Theoretical_Power_Curve (KWh)', 'Wind Direction (degrees)'
]


threshold = df['LV ActivePower (kW)'].median()
df['Power_Class'] = np.where(df['LV ActivePower (kW)'] >= threshold, 1, 0)


features = ['Wind Speed (m/s)', 'Theoretical_Power_Curve (KWh)', 'Wind Direction (degrees)']
X = df[features].copy()
y = df['Power_Class']


X.fillna(X.mean(numeric_only=True), inplace=True)


scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)


X_train, X_test, y_train, y_test = train_test_split(X_scaled, y, test_size=0.2, random_state=42)


models = {
    "Árvore de Decisão": DecisionTreeClassifier(random_state=42),
    "Random Forest": RandomForestClassifier(n_estimators=100, random_state=42),
    "SVM": SVC(kernel='rbf', random_state=42)
}


for name, model in models.items():
    print(f"\nTreinando: {name}")
    model.fit(X_train, y_train)
    y_pred = model.predict(X_test)
    acc = accuracy_score(y_test, y_pred)
    print(f"Acurácia: {acc:.2f}")

    cm = confusion_matrix(y_test, y_pred)
    disp = ConfusionMatrixDisplay(confusion_matrix=cm, display_labels=["Baixa", "Alta"])
    disp.plot(cmap='Blues')
    plt.title(f"Matriz de Confusão - {name}")
    plt.show()
